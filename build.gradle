plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

group 'io.github.abhilashsiyer'
version '1.1'

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

publishing {
    repositories {
        maven {//  optional target repository name
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = findProperty("SONATYPE_USER")
                password = findProperty("SONATYPE_PASSWORD")
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar

            from components.java

            pom {
                name.set("Ams Android")
                description.set("AMS")
                url.set("https://github.com/abhilashsiyer")
                licenses {
                    license {
                        name.set("MIT Licence")
                        url.set("https://github.com/abhilashsiyer/ams-android/blob/master/LICENSE")
                    }
                }
                developers {
                    developer {
                        id.set("Abhi")
                        name.set("Abhilash Srinivasa")
                        email.set("Abhilashsiyer@gmail.com")
                    }
                }
                scm {
                    connection.set("scm:git:https://github.com/abhilashsiyer/ams-android.git")
                    developerConnection.set("scm:git:https://github.com/abhilashsiyer/ams-android.git")
                    url.set("https://github.com/abhilashsiyer")
                }

            }
        }
    }
}

signing {
    def signingKey = findProperty("PGP_SIGNING_KEY")
    def signingPassword = findProperty("PGP_SIGNING_PASSWORD")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}